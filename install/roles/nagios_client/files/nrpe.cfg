#############################################################################
# Sample NRPE Config File
# Written by: Ethan Galstad (nagios@nagios.org)
#
# Last Modified: 11-23-2007
#
# NOTES:
# This is a sample configuration file for the NRPE daemon.  It needs to be
# located on the remote host that is running the NRPE daemon, not the host
# from which the check_nrpe client is being executed.
#############################################################################


# LOG FACILITY
# The syslog facility that should be used for logging purposes.

log_facility=daemon



# PID FILE
# The name of the file in which the NRPE daemon should write it's process ID
# number.  The file is only written if the NRPE daemon is started by the root
# user and is running in standalone mode.

pid_file=/var/run/nagios/nrpe.pid



# PORT NUMBER
# Port number we should wait for connections on.
# NOTE: This must be a non-priviledged port (i.e. > 1024).
# NOTE: This option is ignored if NRPE is running under either inetd or xinetd

server_port=5666



# SERVER ADDRESS
# Address that nrpe should bind to in case there are more than one interface
# and you do not want nrpe to bind on all interfaces.
# NOTE: This option is ignored if NRPE is running under either inetd or xinetd

#server_address=127.0.0.1



# NRPE USER
# This determines the effective user that the NRPE daemon should run as.
# You can either supply a username or a UID.
#
# NOTE: This option is ignored if NRPE is running under either inetd or xinetd

nrpe_user=nagios



# NRPE GROUP
# This determines the effective group that the NRPE daemon should run as.
# You can either supply a group name or a GID.
#
# NOTE: This option is ignored if NRPE is running under either inetd or xinetd

nrpe_group=nagios



# ALLOWED HOST ADDRESSES
# This is an optional comma-delimited list of IP address or hostnames
# that are allowed to talk to the NRPE daemon. Network addresses with a bit mask
# (i.e. 192.168.1.0/24) are also supported. Hostname wildcards are not currently
# supported.
#
# Note: The daemon only does rudimentary checking of the client's IP
# address.  I would highly recommend adding entries in your /etc/hosts.allow
# file to allow only the specified host to connect to the port
# you are running this daemon on.
#
# NOTE: This option is ignored if NRPE is running under either inetd or xinetd

allowed_hosts=127.0.0.1,10.121.146.55,10.224.237.229,10.195.83.10,172.24.225.0/24,10.29.144.0/24,172.24.225.0/24,10.29.144.0/24



# COMMAND ARGUMENT PROCESSING
# This option determines whether or not the NRPE daemon will allow clients
# to specify arguments to commands that are executed.  This option only works
# if the daemon was configured with the --enable-command-args configure script
# option.
#
# *** ENABLING THIS OPTION IS A SECURITY RISK! ***
# Read the SECURITY file for information on some of the security implications
# of enabling this variable.
#
# Values: 0=do not allow arguments, 1=allow command arguments

dont_blame_nrpe=1



# BASH COMMAND SUBTITUTION
# This option determines whether or not the NRPE daemon will allow clients
# to specify arguments that contain bash command substitutions of the form
# $(...).  This option only works if the daemon was configured with both
# the --enable-command-args and --enable-bash-command-substitution configure
# script options.
#
# *** ENABLING THIS OPTION IS A HIGH SECURITY RISK! ***
# Read the SECURITY file for information on some of the security implications
# of enabling this variable.
#
# Values: 0=do not allow bash command substitutions,
#         1=allow bash command substitutions

allow_bash_command_substitution=0



# COMMAND PREFIX
# This option allows you to prefix all commands with a user-defined string.
# A space is automatically added between the specified prefix string and the
# command line from the command definition.
#
# *** THIS EXAMPLE MAY POSE A POTENTIAL SECURITY RISK, SO USE WITH CAUTION! ***
# Usage scenario:
# Execute restricted commmands using sudo.  For this to work, you need to add
# the nagios user to your /etc/sudoers.  An example entry for alllowing
# execution of the plugins from might be:
#
# nagios          ALL=(ALL) NOPASSWD: /usr/lib/nagios/plugins/
#
# This lets the nagios user run all commands in that directory (and only them)
# without asking for a password.  If you do this, make sure you don't give
# random users write access to that directory or its contents!

# command_prefix=/usr/bin/sudo



# DEBUGGING OPTION
# This option determines whether or not debugging messages are logged to the
# syslog facility.
# Values: 0=debugging off, 1=debugging on

debug=0



# COMMAND TIMEOUT
# This specifies the maximum number of seconds that the NRPE daemon will
# allow plugins to finish executing before killing them off.

command_timeout=60



# CONNECTION TIMEOUT
# This specifies the maximum number of seconds that the NRPE daemon will
# wait for a connection to be established before exiting. This is sometimes
# seen where a network problem stops the SSL being established even though
# all network sessions are connected. This causes the nrpe daemons to
# accumulate, eating system resources. Do not set this too low.

connection_timeout=300



# WEEK RANDOM SEED OPTION
# This directive allows you to use SSL even if your system does not have
# a /dev/random or /dev/urandom (on purpose or because the necessary patches
# were not applied). The random number generator will be seeded from a file
# which is either a file pointed to by the environment valiable $RANDFILE
# or $HOME/.rnd. If neither exists, the pseudo random number generator will
# be initialized and a warning will be issued.
# Values: 0=only seed from /dev/[u]random, 1=also seed from weak randomness

#allow_weak_random_seed=1



# INCLUDE CONFIG FILE
# This directive allows you to include definitions from an external config file.

#include=<somefile.cfg>



# INCLUDE CONFIG DIRECTORY
# This directive allows you to include definitions from config files (with a
# .cfg extension) in one or more directories (with recursion).

#include_dir=<somedirectory>
#include_dir=<someotherdirectory>



# COMMAND DEFINITIONS
# Command definitions that this daemon will run.  Definitions
# are in the following format:
#
# command[<command_name>]=<command_line>
#
# When the daemon receives a request to return the results of <command_name>
# it will execute the command specified by the <command_line> argument.
#
# Unlike Nagios, the command line cannot contain macros - it must be
# typed exactly as it should be executed.
#
# Note: Any plugins that are used in the command lines must reside
# on the machine that this daemon is running on!  The examples below
# assume that you have plugins installed in a /usr/local/nagios/libexec
# directory.  Also note that you will have to modify the definitions below
# to match the argument format the plugins expect.  Remember, these are
# examples only!


# The following examples use hardcoded command arguments...

#command[check_users]=/usr/lib/nagios/plugins/check_users -w 5 -c 10
#command[check_load]=/usr/lib/nagios/plugins/check_load -w 55,50,45 -c 70,65,60
#command[check_hda1]=/usr/lib/nagios/plugins/check_disk -w 20% -c 10% -p /dev/hda1
#command[check_zombie_procs]=/usr/lib/nagios/plugins/check_procs -w 5 -c 10 -s Z
#command[check_total_procs]=/usr/lib/nagios/plugins/check_procs -w 850 -c 950
#command[check_mem]=/usr/lib/nagios/plugins/check_mem -w 80 -c 90
#command[check_numcpu]=/usr/lib/nagios/plugins/check_numcpu
#command[check_sdd1]=/usr/lib/nagios/plugins/check_disk -w 10% -c 5% -p /dev/sdd1
#command[check_sde1]=/usr/lib/nagios/plugins/check_disk -w 10% -c 5% -p /dev/sde1
#command[check_sdf1]=/usr/lib/nagios/plugins/check_disk -w 10% -c 5% -p /dev/sdf1
#command[check_sdc1]=/usr/lib/nagios/plugins/check_disk -w 10% -c 5% -p /dev/sdc1
#command[check_sdb1]=/usr/lib/nagios/plugins/check_disk -w 10% -c 5% -p /dev/sdb1
#command[check_sda1]=/usr/lib/nagios/plugins/check_disk -w 10% -c 5% -p /dev/sda1
#command[check_ssh]=/usr/lib/nagios/plugins/check_ssh

#command[check_rabbitobject]=/usr/lib/nagios/plugins/check_rabbitmq_objects -H 10.173.242.139 --port=15672 --username monitor -p monitor -t 150
#command[check_rabbitmq_cluster1]=/usr/lib/nagios/plugins/check_rabbitmq_cluster -H $ARG1$ --port=15672 --username monitor -p monitor -t 150
#command[check_rabbitmq_aliveness1]=/usr/lib/nagios/plugins/check_rabbitmq_aliveness -H $ARG1$ --port=15672 --username monitor -p monitor -t 150
#command[check_rabbitmq_connections1]=/usr/lib/nagios/plugins/check_rabbitmq_connections -H $ARG1$ --port=15672 --username monitor -p monitor -t 150
#command[check_rabbitmq_objects1]=/usr/lib/nagios/plugins/check_rabbitmq_objects -H $ARG1$ --port=15672 --username monitor -p monitor -t 150
#command[check_rabbitmq_overview1]=/usr/lib/nagios/plugins/check_rabbitmq_overview -H $ARG1$ --port=15672 --username monitor -p monitor -t 150

#command[check_int_eth0]=/usr/lib/nagios/plugins/check_interfaces eth0 -w UNKNOWN -c DOWN
#command[check_int_eth1]=/usr/lib/nagios/plugins/check_interfaces eth1 -w UNKNOWN -c DOWN
#command[check_int_eth2]=/usr/lib/nagios/plugins/check_interfaces eth2 -w UNKNOWN -c DOWN
#command[check_int_eth3]=/usr/lib/nagios/plugins/check_interfaces eth3 -w UNKNOWN -c DOWN
#command[check_int_eth4]=/usr/lib/nagios/plugins/check_interfaces eth4 -w UNKNOWN -c DOWN
#command[check_int_eno1]=/usr/lib/nagios/plugins/check_interfaces eno1 -w UNKNOWN -c DOWN
#command[check_int_eno2]=/usr/lib/nagios/plugins/check_interfaces eno2 -w UNKNOWN -c DOWN
#command[check_int_eno3]=/usr/lib/nagios/plugins/check_interfaces eno3 -w UNKNOWN -c DOWN
#command[check_int_eno4]=/usr/lib/nagios/plugins/check_interfaces eno4 -w UNKNOWN -c DOWN
#command[check_disk_serial]= sudo /usr/lib/nagios/plugins/check_disk_serial_plugin.sh
#command[check_idrac2]= sudo /usr/lib/nagios/plugins/check_idrac.sh

#command[check_idrac]=/usr/lib/nagios/plugins/check_idrac -c DOWN
#command[check_drives]=/usr/lib/nagios/plugins/check_drives


#command[check_apache2]=/usr/lib/nagios/plugins/check_process apache2

#command[check_ceph_health]=sudo /usr/lib/nagios/plugins/check_ceph_health
#command[check_dhcpd]=/usr/lib/nagios/plugins/check_procs -C dhcpd
#command[check_ceph_osd]= sudo /usr/lib/nagios/plugins/check_ceph_osd -H $ARG1$
###########################################################################################################################################


# The following examples use hardcoded command arguments...

command[check_users]=/usr/lib/nagios/plugins/check_users -w 5 -c 10
command[check_load]=/usr/lib/nagios/plugins/check_load -w 55,50,45 -c 70,65,60
command[check_hda1]=/usr/lib/nagios/plugins/check_disk -w 20% -c 10% -p /dev/hda1
command[check_zombie_procs]=/usr/lib/nagios/plugins/check_procs -w 5 -c 10 -s Z
command[check_total_procs]=/usr/lib/nagios/plugins/check_procs -w 850 -c 950
command[check_mem]=/usr/lib/nagios/plugins/check_mem -w 80 -c 90
command[check_numcpu]=/usr/lib/nagios/plugins/check_numcpu
command[check_sdd1]=/usr/lib/nagios/plugins/check_disk -w 10% -c 5% -p /dev/sdd1
command[check_sde1]=/usr/lib/nagios/plugins/check_disk -w 10% -c 5% -p /dev/sde1
command[check_sdf1]=/usr/lib/nagios/plugins/check_disk -w 10% -c 5% -p /dev/sdf1
command[check_sdc1]=/usr/lib/nagios/plugins/check_disk -w 10% -c 5% -p /dev/sdc1
command[check_sdb1]=/usr/lib/nagios/plugins/check_disk -w 10% -c 5% -p /dev/sdb1
command[check_sda1]=/usr/lib/nagios/plugins/check_disk -w 10% -c 5% -p /dev/sda1
command[check_ssh]=/usr/lib/nagios/plugins/check_ssh

command[check_rabbitobject]=/usr/lib/nagios/plugins/check_rabbitmq_objects -H 10.173.242.139 --port=15672 --username monitor -p monitor -t 150
command[check_rabbitmq_cluster1]=/usr/lib/nagios/plugins/check_rabbitmq_cluster -H $ARG1$ --port=15672 --username monitor -p monitor -t 150
command[check_rabbitmq_aliveness1]=/usr/lib/nagios/plugins/check_rabbitmq_aliveness -H $ARG1$ --port=15672 --username monitor -p monitor -t 150
command[check_rabbitmq_connections1]=/usr/lib/nagios/plugins/check_rabbitmq_connections -H $ARG1$ --port=15672 --username monitor -p monitor -t 150
command[check_rabbitmq_objects1]=/usr/lib/nagios/plugins/check_rabbitmq_objects -H $ARG1$ --port=15672 --username monitor -p monitor -t 150
command[check_rabbitmq_overview1]=/usr/lib/nagios/plugins/check_rabbitmq_overview -H $ARG1$ --port=15672 --username monitor -p monitor -t 150

command[check_int_eth0]=/usr/lib/nagios/plugins/check_interfaces eth0 -w UNKNOWN -c DOWN
command[check_int_em1]=/usr/lib/nagios/plugins/check_interfaces em1 -w UNKNOWN -c DOWN
command[check_int_em2]=/usr/lib/nagios/plugins/check_interfaces em2 -w UNKNOWN -c DOWN
command[check_int_em3]=/usr/lib/nagios/plugins/check_interfaces em3 -w UNKNOWN -c DOWN
command[check_int_em4]=/usr/lib/nagios/plugins/check_interfaces em4 -w UNKNOWN -c DOWN
command[check_int_eth1]=/usr/lib/nagios/plugins/check_interfaces eth1 -w UNKNOWN -c DOWN
command[check_int_eth2]=/usr/lib/nagios/plugins/check_interfaces eth2 -w UNKNOWN -c DOWN
command[check_int_eth3]=/usr/lib/nagios/plugins/check_interfaces eth3 -w UNKNOWN -c DOWN
command[check_int_eth4]=/usr/lib/nagios/plugins/check_interfaces eth4 -w UNKNOWN -c DOWN
command[check_int_eno1]=/usr/lib/nagios/plugins/check_interfaces eno1 -w UNKNOWN -c DOWN
command[check_int_eno2]=/usr/lib/nagios/plugins/check_interfaces eno2 -w UNKNOWN -c DOWN
command[check_int_eno3]=/usr/lib/nagios/plugins/check_interfaces eno3 -w UNKNOWN -c DOWN
command[check_int_eno4]=/usr/lib/nagios/plugins/check_interfaces eno4 -w UNKNOWN -c DOWN
command[check_int_br-mgmt]=/usr/lib/nagios/plugins/check_interfaces2 br-mgmt -w UNKNOWN -c DOWN
command[check_int_br-stor]=/usr/lib/nagios/plugins/check_interfaces2 br-stor -w UNKNOWN -c DOWN
command[check_int_br-vlan]=/usr/lib/nagios/plugins/check_interfaces2 br-vlan -w UNKNOWN -c DOWN
command[check_int_br-vxlan]=/usr/lib/nagios/plugins/check_interfaces2 br-vxlan -w UNKNOWN -c DOWN
command[check_int_eno1.531]=/usr/lib/nagios/plugins/check_interfaces2 eno1.531 -w UNKNOWN -c DOWN
command[check_int_eno1.533]=/usr/lib/nagios/plugins/check_interfaces2 eno1.533 -w UNKNOWN -c DOWN
command[check_int_eno2.530]=/usr/lib/nagios/plugins/check_interfaces2 eno2.530 -w UNKNOWN -c DOWN
command[check_int_eno2.532]=/usr/lib/nagios/plugins/check_interfaces2 eno2.532 -w UNKNOWN -c DOWN
command[check_int]=/usr/lib/nagios/plugins/check_int -w UNKNOWN -c DOWN
command[check_int_cont]=/usr/lib/nagios/plugins/check_int_cont -w UNKNOWN -c DOWN
command[check_idrac]=/usr/lib/nagios/plugins/check_idrac -c DOWN
command[check_drives]=/usr/lib/nagios/plugins/check_drives
command[check_apache2]=/usr/lib/nagios/plugins/check_process apache2
command[check_ceph_health]=sudo /usr/lib/nagios/plugins/check_ceph_health
command[check_ceph_health2]=sudo /usr/lib/nagios/plugins/check_ceph_health -c $ARG1$
command[check_dhcpd]=/usr/lib/nagios/plugins/check_procs -C dhcpd
command[check_ceph_osd]= sudo /usr/lib/nagios/plugins/check_ceph_osd -H $ARG1$
command[check_total_procs]=/usr/lib/nagios/plugins/check_procs -w 150 -c 200
command[check_ceph_health]=sudo /usr/lib/nagios/plugins/check_ceph_health
command[check_ceph_df]=sudo /usr/lib/nagios/plugins/check_ceph_df -i admin -k /etc/ceph/ceph.client.admin.keyring -W 65 -C 75
command[check_ceph_df2]=sudo /usr/lib/nagios/plugins/check_ceph_df -c $ARG1$ -i admin -k $ARG2$ -W 65 -C 75
command[check_2nd_int]= /usr/lib/nagios/plugins/check_ping -H 10.224.238.1 -w 3000.0,80% -c 5000.0,100% -p 2
command[check_ceph_osd]= sudo /usr/lib/nagios/plugins/check_ceph_osd -H $ARG1$
command[check_ceph_mon]= sudo /usr/lib/nagios/plugins/check_ceph_mon -I $ARG1$
command[check_mon_procs]=/usr/lib/nagios/plugins/check_procs -C ceph-mon -c 1:1
command[check_osd_procs]=/usr/lib/nagios/plugins/check_procs -C ceph-osd -c 5:5
command[check_disk_serial]=sudo /usr/lib/nagios/plugins/check_disk_serial_plugin.sh
command[check_idrac2]= sudo /usr/lib/nagios/plugins/check_idrac.sh
command[check_idrac]=/usr/lib/nagios/plugins/check_idrac -c DOWN
command[check_drives]=/usr/lib/nagios/plugins/check_drives
command[check_all_disks]=/usr/lib/nagios/plugins/check_disk -w 10% -c 5% -A --ignore-ereg-path=/dev/shm --ignore-ereg-path=/run* --ignore-ereg-path=/sys*
command[st2nagios]=/usr/bin/python /usr/lib/nagios/plugins/st2service_handler.py /usr/lib/nagios/plugins/st2service_handler.conf $SERVICEEVENTID$ "$SERVICEDESC$" $SERVICESTATE$ $SERVICESTATEID$ $SERVICESTATETYPE$ $SERVICEATTEMPT$ $HOSTNAME$
# Nagios services configuration for Admin Services
command[check_rabbitmq]=/usr/lib/nagios/plugins/check_procs -c 1:2 -C rabbitmq-server
command[check_apache]=/usr/lib/nagios/plugins/check_procs -C apache2 -p 1 -c 1:1
command[check_mysql]=/usr/lib/nagios/plugins/check_procs -C mysqld_safe -p 1 -c 1:1
command[check_mysqld]=/usr/lib/nagios/plugins/check_procs -C mysqld -p 1 -c 1:1
command[check_dnsmasq]=/usr/lib/nagios/plugins/check_procs -C dnsmasq -p 1 -c 2:
command[check_neutron-metadata-agent]=/usr/lib/nagios/plugins/check_procs -a neutron-metadata-agent -p 1 -c 1:1
command[check_neutron-dhcp-agent]=/usr/lib/nagios/plugins/check_procs -a neutron-dhcp-agent -p 1 -c 1:1
command[check_neutron-lbaas-agent]=/usr/lib/nagios/plugins/check_procs -a neutron-lbaas-agent -p 1 -c 1:1
command[check_neutron-metering-agent]=/usr/lib/nagios/plugins/check_procs -a neutron-metering-agent -p 1 -c 1:1
command[check_neutron-vpn-agent]=/usr/lib/nagios/plugins/check_procs -a neutron-vpn-agent -p 1 -c 1:1
command[check_neutron-ovs-agent]=/usr/lib/nagios/plugins/check_procs -a neutron-openvswitch-agent -p 1 -c 1:1
command[check_neutron]=/usr/lib/nagios/plugins/check_procs -C neutron-server -p 1 -c 1:1
command[check_keystonev2]=/usr/lib/nagios/plugins/check_procs -c 1:200 -u keystone
command[check_keystone_http]=/usr/lib/nagios/plugins/check_http 127.0.0.1 -p 5000 -R application/vnd.openstack.identity-v2
command[check_glance_http]=/usr/lib/nagios/plugins/check_http localhost -p 9292 -R "SUPPORTED"
command[check_glance]=/usr/lib/nagios/plugins/check_procs -c 4: -u glance
command[check_horizon]=/usr/lib/nagios/plugins/check_http controller -u /horizon -R username
command[check_cinder-api]=/usr/lib/nagios/plugins/check_procs -a cinder-api -p 1 -c 1:1
command[check_cinder-scheduler]=/usr/lib/nagios/plugins/check_procs -a cinder-scheduler -p 1 -c 1:1
command[check_cinder-volume]=/usr/lib/nagios/plugins/check_procs -a cinder-volume -p 1 -c 1:1
command[check_cinder_http]=/usr/lib/nagios/plugins/check_http controller -p 8776 -R "CURRENT"
command[check_ovs]=/usr/lib/nagios/plugins/check_procs -a ovs-vswitchd -p 1 -c 1:1
command[check_nova]=/usr/lib/nagios/plugins/check_procs -c 4: -u nova
command[check_netns]=/usr/lib/nagios/plugins/check_netns.sh
command[check_nova_compute]=/usr/lib/nagios/plugins/check_procs -C nova-compute -p 1 -c 1:1
command[check_nova_proc]=/usr/lib/nagios/plugins/check_procs -w 1: -u nova
command[check_neutron_proc]=/usr/lib/nagios/plugins/check_procs -w 1: -u neutron
command[check_ovswitch_proc]=/usr/lib/nagios/plugins/check_procs -w 2 -C ovs-vswitchd
command[check_ovswitch_server_proc]=/usr/lib/nagios/plugins/check_procs -w 2 -C ovsdb-server
command[check_ovsvswitchd]=/usr/lib/nagios/plugins/check_procs -w 1: -C ovs-vswitchd
command[check_ovsdbserver]=/usr/lib/nagios/plugins/check_procs -w 1: -C ovsdb-server
command[service_restart]=sudo service $ARG1$ restart
command[check_log]=/usr/lib/nagios/plugins/check_log -F $ARG1$ -O $ARG2$ -q $ARG3$
command[check_log_neutron]= sudo /usr/lib/nagios/plugins/check_log -F "/var/log/neutron/openvswitch-agent.log" -O "/var/log/nagios/nagios-ovsagent.log" -q "failed to open socket (Protocol error)"
############################################################################################################################
####### for monitoring team###################################################################################################
command[mon_check_memory]=/usr/lib64/nagios/plugins/check_mem_usage.sh $ARG1$
command[mon_check_swap]=/usr/lib64/nagios/plugins/check_swap_usage.sh $ARG1$
command[mon_check_cpuload]=/usr/lib64/nagios/plugins/check_cpu_usage.sh $ARG1$
command[mon_check_process]=/usr/lib64/nagios/plugins/check_procs -c 1: -a $ARG1$
command[mon_check_disk]=/usr/lib64/nagios/plugins/check_disk -w $ARG2$ -c $ARG3$ -p $ARG1$
command[mon_check_cuslog]=/usr/lib64/nagios/plugins/check_logfiles -f $ARG2$
command[mon_check_cassandra]=/usr/lib64/nagios/plugins/cassandra.pl --heap_w $ARG1$ --heap_c $ARG2$
command[mon_check_log]=/usr/lib64/nagios/plugins/check_log.pl $ARG1$
command[mon_check_file_age]=/usr/local/nagios/libexec/check_file_age $ARG1$
###############################################################################################################################
###### ANY QUERY#################
command[any]=$ARG1$
################################
#  when: ansible_distribution == "CentOS" `and ansible_distribution_major_version|int > 5
# The following examples allow user-supplied arguments and can
# only be used if the NRPE daemon was compiled with support for
# command arguments *AND* the dont_blame_nrpe directive in this
# config file is set to '1'.  This poses a potential security risk, so
# make sure you read the SECURITY file before doing this.

#command[check_users]=/usr/lib/nagios/plugins/check_users -w $ARG1$ -c $ARG2$
#command[check_load]=/usr/lib/nagios/plugins/check_load -w $ARG1$ -c $ARG2$
#command[check_disk]=/usr/lib/nagios/plugins/check_disk -w $ARG1$ -c $ARG2$ -p $ARG3$
#command[check_procs]=/usr/lib/nagios/plugins/check_procs -w $ARG1$ -c $ARG2$ -s $ARG3$

#
# local configuration:
#       if you'd prefer, you can instead place directives here
include=/etc/nagios/nrpe_local.cfg

#
# you can place your config snipplets into nrpe.d/
# only snipplets ending in .cfg will get included
include_dir=/etc/nagios/nrpe.d/
